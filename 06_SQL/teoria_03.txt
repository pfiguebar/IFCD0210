INSERTAR DATOS
INSERT INTO producto (id, titulo, precio) VALUES (1, "tabla de planchar", 12.99);

***************************************************************************************************************

ACTUALIZAR DATOS
metodo generico  --> actualizar campos indicando su id
UPDATE producto SET titulo='maquina lavar', precio=120 WHERE id=77;

EJEMPLOS  
    0) Actualizar todos los campos de una tabla, aplicando formula 
    UPDATE producto SET precio=precio*1.10;
  
    1) Actualizar todos los productos cuyo precio sea superior a 100 euros
    UPDATE producto SET precio=precio*0.8 WHERE precio>100;
    
    2) Actualizar todos los productos categoria tornillos y tuercas
    Ejemplo tabla A  id, nombre, precio, categoria               
                     1, "wurt", "1", "tornillos"                                 
                     2, "bosc", "2", "tuercas"                                   
                     3, "fail", "3", "arandelas"                                 
    UPDATE productos SET precio=precio*0.8 WHERE (categoria="tornillos" OR categoria="tuercas");
    Aqui solo le modifica precios a registro 1 y 2. No se lo aplica a 3
    
    3) Poner activo = 0 a todos los alumnos cuyas faltas sean superior a 10
    Ejemplo tabla ALUMNOS (id, dni, numero_alumno, numero_faltas, activo(campo boleano))
        UPDATE alumnos SET activo=0 WHERE numero_faltas>10;

***************************************************************************************************************

BORRAR DATOS
DELELTE FROM producto WHERE id=77;

EJEMPLOS
0) Borrar todos los tornillos de la tabla productos
DELETE FROM productos WHERE categoria="tornillos";

***************************************************************************************************************

SELECCCIONAR DATOS
Lo primero es la palabra SELECT, a continuacion se listan las filas que se quiere que el SGBD devuelva. Despues hay que especificar donde se encuentran esos datos via FROM o JOINS. A continuacion en el WHERE se especifican las condiciones. Despues se utiliza la agrupacion GROUP BY que puede llevar condiciones extras con HAVING. Finalmente ORDER BY que ordena resultado segun se desea

Ejemplo tabla ALUMNOS (id, nombre, apellidos, direccion, telefono)
Seleccionar todos los campos nombre y apellidos de la tabla alumnos, que cumpla condicion nombre es igual a manolo
SELECT nombre, apellidos FROM alumnos WHERE nombre="manolo" 

0)tenemos la siguiente tabla EMPRESAS (id, nombre, direccion, estado (es celda enum "contactado", "no contactado")
Queremos conocer los valores de ENUM
SELECT DISTINCT estado FROM empresas  // Con DISTINCT ..nos devuelve 2 valores "contactado" y "no contactado"
                                      // Sin DISTINCT ..nos da todos valores de la columna estado.. desde id=1 hasta id=infinito
                                      
1) Uso de alias
Ejemplo: programador no puso bien nombre columna (lo llamo categoria_producto). Realmente era categoria tienda. Para ello se puede usar un alias (AS)
Alias solo vive en la consulta. No genera una nueva variable en ningun sitio
SELECT categoria_producto AS categoria_tienda WHERE categoria = "tornillo";

2) Hacer un paginador
Ejemplo: de todos los datos de una tabla productos, quiero mostrar solo primeros 5 resultados de una lista de 100 
SELECT * FORM productos LIMIT 5;

Ejemplo: de todos los datos de una tabla producto, quiero mostrar los resultados (no son los id)  desde la posicion 5 a la 10
SELECT * FROM productos LIMIT 5, 10;




